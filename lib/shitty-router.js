// Generated by CoffeeScript 1.3.3
(function() {
  var ShittyRouter, exports,
    __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  exports = module.exports = ShittyRouter = (function() {

    function ShittyRouter() {
      this.routes = [];
    }

    ShittyRouter.prototype.addRouteRegex = function(method, match, params, callback) {
      if (!(callback != null)) {
        callback = params;
        params = null;
      }
      return this.routes.push({
        match: match,
        params: params,
        callback: callback,
        method: method
      });
    };

    ShittyRouter.prototype.addRoute = function(method, str, callback) {
      var newstr, params;
      params = [];
      newstr = str.replace(/(\/)?(\.)?:(\w+)(?:(\(.*?\)))?(\?)?/g, function(_a, slash, _b, key, _c, _d) {
        params.push(key);
        return slash + "([^/.]+?)";
      });
      return this.addRouteRegex(method, new RegExp('^' + newstr + '$'), params, callback);
    };

    ShittyRouter.prototype.match = function(method, path, extraparams) {
      var i, param, params, results, route, _i, _j, _len, _len1, _ref, _ref1;
      _ref = this.routes;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        route = _ref[_i];
        if (route.method === "ANY" || (route.method instanceof Array && __indexOf.call(route.method, method) >= 0) || method === route.method) {
          results = route.match.exec(path);
          if (results != null) {
            params = {};
            _ref1 = route.params;
            for (i = _j = 0, _len1 = _ref1.length; _j < _len1; i = ++_j) {
              param = _ref1[i];
              params[param] = results[i + 1];
            }
            if (route.callback != null) {
              route.callback(params, extraparams);
            }
            return true;
          }
        }
      }
      return false;
    };

    return ShittyRouter;

  })();

}).call(this);
